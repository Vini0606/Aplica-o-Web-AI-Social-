from docx import Document
from datetime import datetime
import os
import json
from docx import Document
from docx.text.paragraph import Paragraph
from datetime import datetime
import os
from docx.oxml.shared import OxmlElement
from docx import Document
from docx.text.paragraph import Paragraph
from copy import deepcopy
from docx.enum.text import WD_ALIGN_PARAGRAPH
from docx.shared import Pt, Inches, Cm, RGBColor
from datetime import date
from config import settings

# =================================================================
# Ìó¨ FUN√á√ÉO AUXILIAR PARA ESTILOS
# =================================================================
def definir_estilos(document):
    """
    Centraliza todas as modifica√ß√µes de estilo do documento para garantir consist√™ncia.
    """
    # 1. ALTERAR A FONTE PADR√ÉO (ESTILO 'NORMAL')
    estilo_normal = document.styles['Normal']
    fonte_normal = estilo_normal.font
    fonte_normal.name = 'Abadi'
    fonte_normal.size = Pt(11)

    # 2. ALTERAR ESTILO DO T√çTULO PRINCIPAL (N√çVEL 1)
    # Usado pela fun√ß√£o `gerarCapa` e outros t√≠tulos de n√≠vel 1
    estilo_h1 = document.styles['Heading 1']
    fonte_h1 = estilo_h1.font
    fonte_h1.name = 'Abadi'
    fonte_h1.size = Pt(22)
    fonte_h1.bold = True
    fonte_h1.color.rgb = RGBColor(0x0A, 0x25, 0x40)
    paragrafo_h1 = estilo_h1.paragraph_format
    paragrafo_h1.alignment = WD_ALIGN_PARAGRAPH.CENTER
    paragrafo_h1.space_before = Pt(12)
    paragrafo_h1.space_after = Pt(12)

    # 3. ALTERAR ESTILO DOS SUBT√çTULOS (N√çVEL 2)
    estilo_h2 = document.styles['Heading 2']
    fonte_h2 = estilo_h2.font
    fonte_h2.name = 'Abadi'
    fonte_h2.size = Pt(14)
    fonte_h2.bold = True
    fonte_h2.color.rgb = RGBColor(0x0A, 0x25, 0x40)  # Azul corporativo
    paragrafo_h2 = estilo_h2.paragraph_format
    paragrafo_h2.alignment = WD_ALIGN_PARAGRAPH.LEFT
    paragrafo_h2.space_before = Pt(18)
    paragrafo_h2.space_after = Pt(6)

    # 4. ALTERAR ESTILO DOS T√çTULOS DE T√ìPICOS (N√çVEL 3)
    estilo_h3 = document.styles['Heading 3']
    fonte_h3 = estilo_h3.font
    fonte_h3.name = 'Abadi'
    fonte_h3.size = Pt(12)
    fonte_h3.bold = True
    paragrafo_h3 = estilo_h3.paragraph_format
    paragrafo_h3.alignment = WD_ALIGN_PARAGRAPH.LEFT
    paragrafo_h3.space_before = Pt(10)
    paragrafo_h3.space_after = Pt(4)

# =================================================================
# Ìó¨ FUN√á√ÉO PARA GERAR A CAPA
# =================================================================
def gerarCapa(document, titulo, cliente, autor, data):
    """
    Gera a capa do documento Word. A formata√ß√£o do t√≠tulo vem do estilo 'Heading 1'.
    """
    # 1. Adicionar a logo da empresa na capa
    p_logo = document.add_paragraph()
    p_logo.alignment = WD_ALIGN_PARAGRAPH.CENTER
    run_logo = p_logo.add_run()
    # CORRE√á√ÉO: Usando um valor sensato para a largura, como 6 cm.
    run_logo.add_picture(str(settings.LOGO_PATH), width=Cm(6))

    # 2. T√≠tulo do Relat√≥rio (usa o estilo 'Heading 1' definido anteriormente)
    document.add_heading(titulo, level=1)

    # 3. Informa√ß√µes do Cliente e Autor
    document.add_paragraph() # Espa√ßamento
    p_info = document.add_paragraph()
    p_info.alignment = WD_ALIGN_PARAGRAPH.CENTER
    p_info.add_run(f'Preparado para:\n').bold = True
    p_info.add_run(f'{cliente}\n\n')
    p_info.add_run(f'An√°lise por:\n').bold = True
    p_info.add_run(f'{autor}\n\n')

    # 4. Data
    p_data = document.add_paragraph()
    p_data.alignment = WD_ALIGN_PARAGRAPH.CENTER
    p_data.add_run(data)
    document.add_page_break()

# =================================================================
# Ìó¨ FUN√á√ÉO PRINCIPAL PARA PREENCHER O PLANO
# =================================================================
def preencher_plano_marketing(
    brief_data,
    caminho_saida,
    nome_empresa,
    objetivos,
    persona,
    pilares_conteudo,
    posicionamento,
    calendario=[]
):
    """
    Gera o documento completo do plano de marketing de conte√∫do.
    """
    doc = Document()

    # 1. APLICA TODOS OS ESTILOS AO DOCUMENTO ANTES DE COME√áAR
    definir_estilos(doc)

    # 2. CONFIGURA O CABE√áALHO PARA TODAS AS P√ÅGINAS (EXCETO A CAPA)
    section = doc.sections[0]
    section.different_first_page_header_footer = True
    header = section.header
    p_header = header.add_paragraph()
    p_header.alignment = WD_ALIGN_PARAGRAPH.CENTER
    run_header = p_header.add_run()
    run_header.add_picture(str(settings.LOGO_PATH), height=Cm(3.5))

    # 3. GERA A CAPA
    nome_cliente = brief_data['objetivos']['client_name']
    gerarCapa(
        document=doc,
        titulo="Plano de Marketing de Conte√∫do para Instagram",
        cliente=nome_cliente,
        autor="Equipe Social Planner",
        data=f"{date.today().strftime('%A, %d de %B de %Y')}"
    )

    # 4. GERA O CONTE√öDO DO RELAT√ìRIO USANDO OS ESTILOS DEFINIDOS
    doc.add_heading("üìå Objetivos de Marketing", level=2)
    for objetivo in objetivos:
        doc.add_paragraph(f"{objetivo}", style='List Bullet')

    doc.add_heading("üéØ P√∫blico-alvo", level=2)
    for chave, valor in persona.items():
        p = doc.add_paragraph()
        p.add_run(f"{chave.replace('_', ' ').capitalize()}: ").bold = True
        p.add_run(str(valor) if not isinstance(valor, list) else ', '.join(valor))

    doc.add_heading("üéôÔ∏è Posicionamento e Tom de Voz", level=2)
    doc.add_paragraph(posicionamento['resumo_posicionamento'])

    doc.add_heading("üìö Pilares de Conte√∫do", level=2)
    for pilar in pilares_conteudo:
        doc.add_heading(f"{pilar['nome']}", level=3)
        doc.add_paragraph(pilar['objetivo'])
        doc.add_paragraph("Exemplos de conte√∫do:")
        for exemplo in pilar.get('exemplos', []):
            doc.add_paragraph(f"{exemplo}", style='List Bullet')

    doc.add_heading("üóìÔ∏è Calend√°rio Editorial Sugerido", level=2)
    if calendario:
        table = doc.add_table(rows=1, cols=3)
        table.style = 'Table Grid'
        hdr_cells = table.rows[0].cells
        hdr_cells[0].text = 'Dia'
        hdr_cells[1].text = 'Pilar de Conte√∫do'
        hdr_cells[2].text = 'Hor√°rio Sugerido'
        for cell in hdr_cells:
            cell.paragraphs[0].runs[0].font.bold = True
        for item in calendario:
            row_cells = table.add_row().cells
            row_cells[0].text = item.get('dia', 'N/A')
            row_cells[1].text = item.get('pilar', 'N/A')
            row_cells[2].text = item.get('periodo', 'N/A')
    else:
        doc.add_paragraph("Nenhuma sugest√£o de calend√°rio foi gerada.")

    # ... (Adicione outras se√ß√µes como 'Formatos', 'Estrat√©gia de Engajamento', 'KPIs' aqui)
    doc.add_heading("üìà Estrat√©gia de Engajamento e Crescimento", level=2)
    doc.add_paragraph("Intera√ß√£o Proativa: Dedicar tempo para responder coment√°rios e DMs.", style='List Bullet')
    doc.add_paragraph("Uso Estrat√©gico de Hashtags: Misturar hashtags de nicho e de volume.", style='List Bullet')
    doc.add_paragraph("Call to Actions (CTAs) Claras: Incentivar a√ß√µes como salvar, comentar, etc.", style='List Bullet')

    # 5. SALVA O DOCUMENTO FINAL
    os.makedirs(os.path.dirname(caminho_saida), exist_ok=True)
    doc.save(caminho_saida)
    print(f"‚úÖ Relat√≥rio gerado com sucesso: {caminho_saida}")

# =================================================================
# üéØ BLOCO DE EXECU√á√ÉO PRINCIPAL
# =================================================================
if __name__ == "__main__":
    with open(settings.BRIEFING_JSON_PATH, 'r', encoding='utf-8') as arquivo_json:
        brief_data = json.load(arquivo_json)

    objetivo_principal = [brief_data['objetivos']['objetivo_principal']]
    objetivos_secundarios = brief_data['objetivos']['objetivo_secundario']
    list_objetivos = objetivo_principal + objetivos_secundarios

    preencher_plano_marketing(
        brief_data=brief_data,
        caminho_saida=settings.ESTRATEGIA_PATH,
        nome_empresa=brief_data['objetivos']['client_name'],
        objetivos=list_objetivos,
        persona=brief_data['publico'],
        pilares_conteudo=brief_data['pilares'],
        posicionamento=brief_data['posicionamento'],
        calendario=brief_data.get('calendario', [])
    )